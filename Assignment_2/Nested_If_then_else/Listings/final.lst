


ARM Macro Assembler    Page 1 


    1 00000000                 PRESERVE8
    2 00000000                 THUMB
    3 00000000                 AREA             appcode, CODE, READONLY
    4 00000000                 EXPORT           __main
    5 00000000                 ENTRY
    6 00000000         __main  FUNCTION
    7 00000000         ; if(r0 > r1) {
    8 00000000         ; if(r1 > r2) {
    9 00000000         ;  if(r2 > r3) {
   10 00000000         ;   r4=#4
   11 00000000         ;  }
   12 00000000         ; } 
   13 00000000         ; }
   14 00000000 F04F 0008       MOV              r0, #8
   15 00000004 F04F 0106       MOV              r1, #6
   16 00000008 F04F 0202       MOV              r2, #2
   17 0000000C F04F 0301       MOV              r3, #1
   18 00000010 4288            CMP              r0, r1
   19 00000012 BFC2            ITTT             GT
   20 00000014 EBB1 0502       SUBSGT           r5, r1, r2
   21 00000018 EBB2 0503       SUBSGT           r5, r2, r3
   22 0000001C 2404            MOVGT            r4, #4
   23 0000001E         ; if(r0 > r1) {
   24 0000001E         ; if(r0 > r2) {
   25 0000001E         ;  r4=r0
   26 0000001E         ; }
   27 0000001E         ; else {
   28 0000001E         ;  r4=r2
   29 0000001E         ; }
   30 0000001E         ; }
   31 0000001E F04F 0008       MOV              r0, #8
   32 00000022 F04F 0106       MOV              r1, #6
   33 00000026 F04F 020A       MOV              r2, #10
   34 0000002A 4288            CMP              r0, r1
   35 0000002C BFC6            ITTE             GT
   36 0000002E EBB0 0502       SUBSGT           r5, r0, r2
   37 00000032 4604            MOVGT            r4, r0
   38 00000034 4614            MOVLE            r4, r2
   39 00000036         ; if(r0 > r1) {
   40 00000036         ; if(r0 > r2) {
   41 00000036         ;  r4=r0
   42 00000036         ; }
   43 00000036         ; else {
   44 00000036         ;  r4=r2
   45 00000036         ; }
   46 00000036         ; }
   47 00000036         ; else {
   48 00000036         ;  if(r1 > r2) {
   49 00000036         ;  r4=r1
   50 00000036         ; }
   51 00000036         ; else {
   52 00000036         ;  r4=r2
   53 00000036         ; }
   54 00000036         ; } 
   55 00000036 F04F 0001       MOV              r0, #1
   56 0000003A F04F 0102       MOV              r1, #2
   57 0000003E F04F 0203       MOV              r2, #3
   58 00000042 4288            CMP              r0, r1
   59 00000044 DA00            BGE              branch1



ARM Macro Assembler    Page 2 


   60 00000046 E001            B                branch2
   61 00000048         branch1
   62 00000048 4603            MOV              r3, r0
   63 0000004A E000            B                branch3
   64 0000004C         branch2
   65 0000004C 460B            MOV              r3, r1
   66 0000004E         branch3
   67 0000004E 4293            CMP              r3, r2
   68 00000050 DA00            BGE              branch4
   69 00000052 E001            B                branch5
   70 00000054         branch4
   71 00000054 461C            MOV              r4, r3      ; r4 stores greater
                                                             of all three numbe
                                                            rs r0, r1, r2
   72 00000056 E000            B                stop
   73 00000058         branch5
   74 00000058 4614            MOV              r4, r2      ; r4 stores greater
                                                             of all three numbe
                                                            rs r0, r1, r2
   75 0000005A E7FE    stop    B                stop        ; stop program
   76 0000005C                 ENDFUNC
   77 0000005C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\final.d -o.\objects\final.o -I.\RTE\_Target_1 -IC:\Ke
il_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.
0.1\Device\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --predefine="__UVISIO
N_VERSION SETA 524" --predefine="_RTE_ SETA 1" --predefine="ARMCM4_FP SETA 1" -
-list=.\listings\final.lst final.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__main 00000000

Symbol: __main
   Definitions
      At line 6 in file final.s
   Uses
      At line 4 in file final.s
Comment: __main used once
appcode 00000000

Symbol: appcode
   Definitions
      At line 3 in file final.s
   Uses
      None
Comment: appcode unused
branch1 00000048

Symbol: branch1
   Definitions
      At line 61 in file final.s
   Uses
      At line 59 in file final.s
Comment: branch1 used once
branch2 0000004C

Symbol: branch2
   Definitions
      At line 64 in file final.s
   Uses
      At line 60 in file final.s
Comment: branch2 used once
branch3 0000004E

Symbol: branch3
   Definitions
      At line 66 in file final.s
   Uses
      At line 63 in file final.s
Comment: branch3 used once
branch4 00000054

Symbol: branch4
   Definitions
      At line 70 in file final.s
   Uses
      At line 68 in file final.s
Comment: branch4 used once
branch5 00000058

Symbol: branch5
   Definitions
      At line 73 in file final.s
   Uses
      At line 69 in file final.s
Comment: branch5 used once
stop 0000005A

Symbol: stop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 75 in file final.s
   Uses
      At line 72 in file final.s
      At line 75 in file final.s

8 symbols
343 symbols in table
